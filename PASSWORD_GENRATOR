// strong :- alphanumeric with atleast one uppercase & symbol
// medium :- aplhanumeric with atleast on uppercase
// easy :- alphanumeric

const smallalpha = Array.from(Array(26)).map((x,y)=>y+97)
const capsalpha = Array.from(Array(26)).map((x,y)=>y+65)

const capsalphabet = capsalpha.map((x)=>String.fromCharCode(x)) 
const smallalphabet = smallalpha.map((x)=>String.fromCharCode(x))
const numbers = Array.from(Array(10).keys())
const symbols = ["@","#","$","&","*"]

class passwordgenrator{
    constructor(dig){
        this.length = dig
    }
    createstrongpass(){
        let pass = ""
        let container = capsalphabet.concat(smallalphabet,numbers,symbols)
        for (let i = 0 ; i<this.length;i++){
            pass += container[Math.floor(Math.random()*container.length)]
        }
        return pass
    }
    createmediumpass(){
        let pass = ""
        let container = capsalphabet.concat(smallalphabet,numbers)
        for (let i = 0 ; i<this.length;i++){
            pass += container[Math.floor(Math.random()*container.length)]
        }
        return pass
    }
    createeasypass(){
        let pass = ""
        let container = smallalphabet.concat(numbers)
        for (let i = 0 ; i<this.length;i++){
            pass += container[Math.floor(Math.random()*container.length)]
        }
        return pass
    }
}
let a = new passwordgenrator(8)

console.log(a.createstrongpass())
console.log(a.createmediumpass())
console.log(a.createeasypass())
